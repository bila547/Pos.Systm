@model Sps.Pos.Mvc.ViewModel.CostomerListSearchViewModel
@{
	ViewData["Title"] = "Customers";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="toolbar">
	<div class="container-fluid d-flex flex-stack">
		<div data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_content_container', 'lg': '#kt_toolbar_container'}" class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
			<h1 class="d-flex align-items-center text-dark fw-bolder fs-3 my-1">@ViewData["Title"]</h1>
			<span class="h-20px border-gray-200 border-start mx-4"></span>
		</div>
		<div class="d-flex align-items-center py-1">
		</div>
	</div>
</div>
<div class="card">
	<div class="card-body p-lg-6">
		<div class="row mb-8">
			<div class="col-md-12 ps-lg-10">
				@using (Html.BeginForm("Costomers", "Costomer", FormMethod.Get, new { @class = "form-horizontal", role = "form", id = "searchForm" }))
				{
					<div class="search-wrapper">
						<div class="row">
							<div class="col-md-2">
								@Html.EditorFor(m => m.Name, new { htmlAttributes = new { placeholder = "Name", @class = "form-control m-b" } })
							</div>
							<button id="btnSearch" class="btn btn-primary btn-sm me-2" type="submit">
								<i class="fas fa-search"></i> Search
							</button>&nbsp;&nbsp;&nbsp;
							<a asp-action="Costomers" asp-controller="Costomer" class="btn btn-warning btn-sm"><i class="fas fa-eraser"></i> Clear Filter</a>

						</div>
						<div class="d-flex justify-content-end">
							<a asp-action="CostomerCreate" asp-controller="Costomer" class="btn btn-warning btn-sm me-2"><i class="fas fa-plus-circle"></i> Create</a>
						</div>
					</div>
				}

				<hr />
				<div class="card">
					<div class="card-body" style="padding:4px;">
						<div class="table-responsive">
							<table class="table align-middle table-row-dashed fs-6 gy-5" data-toggle="table" id="table"
								   data-toolbar="#toolbar" data-search="true" data-show-refresh="false" data-show-toggle="true"
								   data-show-columns="true" data-show-export="true" data-detail-view="false" data-detail-formatter="detailFormatter"
								   data-minimum-count-columns="2" data-show-pagination-switch="false" data-pagination="true" data-id-field="id"
								   data-page-list="[10, 20, 30]" data-show-footer="false">
								<thead class="text-start text-gray-500 fw-bolder fs-7 text-uppercase gs-0">
									<tr>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].Id)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].CostomerName)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].AreaName)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].CostomerAddress)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].CostomerPhone)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].CostomerFax)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].CostomerMobile)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].CostomerEmail)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Costomers[0].DateOfBirthDay)
										</th>
										<th width="100px">
											Actions
										</th>
									</tr>
								</thead>
								<tbody class="fs-7 text-gray-600">
									@foreach (var item in Model.Costomers)
									{
										<tr>
											<td>
												@Html.DisplayFor(modelItem => item.Id)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.CostomerName)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.AreaName)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.CostomerAddress)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.CostomerPhone)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.CostomerFax)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.CostomerMobile)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.CostomerEmail)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.DateOfBirthDay)
											</td>
											<td width="100px" class="text-center" style="width:100px">
												<div class="btn-group grid-btn-group" role="group">
													<a href="@Url.Action("CostomerEdit", "Costomer", new { id = item.Id })" title="Edit" class="btn btn-outline-primary btn-sm"><i class="fas fa-edit"></i></a>
													@using (Html.BeginForm("CostomerDelete", "Costomer", FormMethod.Post))
													{
														@Html.AntiForgeryToken()
														<input type="hidden" id="id" name="id" value="@item.Id" />
														<a title="Delete" class="btn btn-outline-danger btn-sm" onclick="return confirmation(this);">
															<i class="fa fa-times"></i>
														</a>
													}
												</div>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		function confirmation($this) {
			if (confirm('Are you sure to remove ?')) {
				$($this).closest("form").submit();
			} else {
				return false;
			}
		}
	</script>
}